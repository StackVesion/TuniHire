pipeline {
    agent any
    
    environment {
        NODE_ENV = 'test'
    }
    
    stages {
        stage('Install dependencies') {
            steps {
                script {
                    // Install global dependencies for testing
                    sh 'npm install -g mocha nyc chai chai-http sinon'
                    
                    dir('Back-end') { sh 'npm install' }
                    dir('Front-End') { sh 'npm install' }
                    dir('Admin-Panel') { sh 'npm install' }
                    dir('Company-Panel') { sh 'npm install' }
                }
            }
        }
        
        stage('Unit Test') {
            steps {
                script {
                    // Run Mocha tests for backend with proper environment
                    dir('Back-end') {
                        sh 'mkdir -p test-reports'
                        sh 'NODE_ENV=test npm test'
                    }
                    
                    // Run tests for other components
                    dir('Front-End') { sh 'npm test || echo "No tests or tests failed but continuing"' }
                    dir('Admin-Panel') { sh 'npm test || echo "No tests or tests failed but continuing"' }
                    dir('Company-Panel') { sh 'npm test || echo "No tests or tests failed but continuing"' }
                }
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: '**/test-reports/*.xml'
                }
            }
        }
        
        stage('Build application') {
            steps {
                script {
                    // No build step needed for backend, just start the server
                    dir('Back-end') { sh 'echo "Backend is ready - no build step needed"' }
                    
                    // Build frontend applications
                    dir('Front-End') { sh 'npm run build || echo "Build script not found but continuing"' }
                    dir('Admin-Panel') { sh 'npm run build || echo "Build script not found but continuing"' }
                    dir('Company-Panel') { sh 'npm run build || echo "Build script not found but continuing"' }
                }
            }
        }
    }
    
    post {
        success {
            script {
                node {
                    echo 'Build succeeded!'
                }
            }
        }
        failure {
            script {
                node {
                    echo 'Build failed!'
                }
            }
        }
        always {
            script {
                node {
                    echo 'Cleaning workspace...'
                    cleanWs()
                }
            }
        }
    }
}